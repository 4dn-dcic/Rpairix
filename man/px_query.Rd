% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/px_query.R
\name{px_query}
\alias{px_query}
\title{Query pairix-indexed pairs file.}
\usage{
px_query(filename, query, max_mem = 1e+08, stringsAsFactors = FALSE,
  linecount.only = FALSE, autoflip = FALSE)
}
\arguments{
\item{filename}{a pairs file, or a bgzipped text file (sometextfile.gz) with an index file sometextfile.gz.px2 in the same folder.}

\item{query}{One of three types: (1) a character vector containing a set of pairs of genomic coordinates in 1-based "chr1:start1-end1|chr2:start2-end2" format. start-end can be omitted (e.g. "chr1:start1-end1|chr2" or "chr1|chr2"); (2) A GInteractions object from the package "InteractionSet"; (3) A GRangesList composed of two GRanges objects of identical length (first pairs, second pairs), from the package "GenomicRanges".}

\item{max_mem}{the total string length allowed for the result. If the size of the output exceeds this number, the function will return NULL and print out a memory error. Default 100,000,000.}

\item{stringsAsFactors}{the stringsAsFactors parameter for the data frame returned. Default False.}

\item{linecount.only}{If TRUE, the function returns an integer corresponding to the number of output lines instead of the actual query result. (default FALSE)}

\item{autoflip}{If TRUE, the function will rerun on a flipped query (mate1 and mate2 swapped) if the original query results in an empty output. (default FALSE). If linecount.only option is used in combination with autoflip, the result count is on the flipped query in case the query gets flipped.}
}
\value{
data frame containing the query result. Column names are added if indexing was done with a pairs preset.
}
\description{
This function allows you to query a 2D range in a pairix-indexed pairs file using strings or GenomicRanges-related objects.
}
\details{
This function is compatible with Bioconductor packages InteractionSet and GenomicRanges.
}
\examples{

##### -- query using strings -- ######

## 2D-indexed file
filename = system.file(".","test_4dn.pairs.gz", package="Rpairix")
query = c("chr10|chr20","chr22|chr22")
res = px_query(filename, query)
print(res)

n = px_query(filename, query, linecount.only=TRUE)
print(n) 

query = "chr20|chr10"
res = px_query(filename, query, autoflip=TRUE)
print(res)

## wild card query
query = "chr21|*"
res = px_query(filename, query, autoflip=TRUE)
print(res)

query = "*|chr21"
res = px_query(filename, query, autoflip=TRUE)
print(res)

## the following attempts will return NULL and give you a warning message.
query = "chr20"
res = px_query(filename, query, autoflip=TRUE)
print(res)

filename = system.file(".","merged_nodups.space.chrblock_sorted.subsample1.txt.gz", package="Rpairix")
query = "10:1-1000000|20"
res = px_query(filename, query)
print(res)

## the following attempts will return NULL and give you a warning message.
res = px_query(filename, query, autoflip=TRUE)
print(res)

filename = system.file(".","merged_nodups.space.chrblock_sorted.subsample1.txt.gz",
package="Rpairix")
query = "10:1-1000000|20"
res = px_query(filename, query)
print(res)

## 1D-indexed file
filename = system.file(".","SRR1171591.variants.snp.vqsr.p.vcf.gz", package="Rpairix")
query = 'chr10|5000000-20000000'
res = px_query(filename, query)
print(res)

## the following attempts will return NULL and give you a warning message.
query = 'chr10|chr20'
res = px_query(filename, query)
print(res)


##### -- query using GenomicRanges-related objects -- #####

filename = system.file(".","test_4dn.pairs.gz", package="Rpairix")

# create GRangesList
library(GenomicRanges)
gr <- GRanges(
  seqnames = Rle(c("chr10", "chr20", "chr21", "chr22"), c(1, 2, 1, 2)),
  ranges = IRanges((0:5*1000000)+1, end = (0:5*1000000)+13000000))
grl <- split(gr, rep(1:2,3))
grl

# create GInteractions
library(InteractionSet)
gi <- GInteractions(grl[[1]],grl[[2]])
gi

# query with GInteractions
res = px_query(filename,query=gi)
print(res)

# query with GRangesList
class(grl)
res = px_query(filename,query=grl)
print(res)

}
\keyword{2D}
\keyword{GInteractions}
\keyword{GenomicRanges}
\keyword{pairix}
\keyword{query}
